--- a/extensions/LUA/byte_array.c
+++ b/extensions/LUA/byte_array.c
@@ -107,12 +107,22 @@ static int32_t get_byte_array_size(lua_S
 static int32_t byte_array_to_string(lua_State *L)
 {
 	lua_packet_segment * array = checkbytearray(L, 1);
-	uint8_t buf[(array->length * 3) + 255];
+	uint8_t *buf;
 	uint8_t hexval[16] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };
-	char res[255 + (array->length * 3)]; /* make sure the buffer is big enough*/
+	char *res; /* make sure the buffer is big enough*/
 	int32_t i, n;
 	uint8_t *ptr = array->start + array->offset;
 
+	buf = kcalloc((array->length * 3) + 255, sizeof(*buf), GFP_KERNEL);
+	if (!buf)
+		return luaL_error(L, "byte_array_to_string, failed alloc buf buffer");
+
+	res = kcalloc((array->length * 3) + 255, sizeof(*res), GFP_KERNEL);
+	if (!res) {
+		kfree(buf);
+		return luaL_error(L, "byte_array_to_string, failed alloc res buffer");
+	}
+
 	for (i = 0; i < array->length; i++) {
 		buf[i * 3] = hexval[(ptr[i] >> 4) & 0xF];
 		buf[(i * 3) + 1] = hexval[ptr[i] & 0x0F];
@@ -124,6 +134,9 @@ static int32_t byte_array_to_string(lua_
 
 	lua_pushlstring(L, res, n);
 
+	kfree(buf);
+	kfree(res);
+
 	return 1;
 }
 
